data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 10))
View(users_2)
library("maps")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = as.Date(created_at,
format = "%B %Y"),
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 10))
ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
library("maps")
ggplot(world.cities, package = "maps")
ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
ggplot(world.cities, package = "maps")
ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80")
world <- fortify(getMap(resolution="low"))
?get_map
?getMap
??getMap
library("ggmap")
world <- fortify(getMap(resolution="low"))
library("rworldmap")
world <- fortify(getMap(resolution="low"))
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
ggplot(world.cities, package = "maps") +
borders("world"
)
mp <- ggplot(us.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
ggplot(world.cities, package = "maps")
library("maps")
library("ggmap")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
library("ggmap")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
ggplot(world.cities)
ggplot(world.cities) +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
library("rtweet")
users <- search_users(q= 'RLadies',
n = 1000,
parse = TRUE)
library("dplyr")
library("lubridate")
library("stringr")
library("ggmap")
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
View(users)
ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80")
library("maps")
ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = as.Date(created_at,
format = "%B %Y"),
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 10))
library("maps")
library("ggplot2")
library("plotly")
library("ggthemes")
library("purrr")
library("tidyr")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = as.Date(created_at,
format = "%B %Y"),
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 10))
detach("ggplot2")
detach(ggplot2)
?detach
detach(package:ggplot2)
detach(package:plotly)
detach(package:ggplot2)
detach(package:ggmap)
detach(package:ggplot2)
ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
library("ggplot2")
ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = as.Date(created_at,
format = "%B %Y"),
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 10))
detach(package:maps)
library("maps")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = as.Date(created_at,
format = "%B %Y"),
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 10))
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
library("ggmap")
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
detach("package:ggmap", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:ggthemes", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:lubridate", unload=TRUE)
detach("package:maps", unload=TRUE)
library("rtweet")
users <- search_users(q= 'RLadies',
n = 1000,
parse = TRUE)
library("dplyr")
library("lubridate")
library("stringr")
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
library("ggmap")
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days)
library("purrr")
library("tidyr")
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days)
View(users_2)
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode))
users_2[1:5,] %>%
mutate(longlat = purrr::map(.$location, geocode))
users_2[6:15,] %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
users_2[16:25,] %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
users_2[26:34,] %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(location = ifelse(screen_name == "RLadiesMTL", "Montreal", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
library("maps")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80")
ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80")
library("ggthemes")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = as.Date(created_at,
format = "%B %Y"),
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 10))
library(gganimate)
gganimate(mp, interval = .2)
mp
gganimate(mp, interval = .2)
gganimate(mp, interval = .2, "output.gif")
library("rtweet")
users <- search_users(q= 'RLadies',
n = 1000,
parse = TRUE)
library("dplyr")
library("lubridate")
library("stringr")
library("ggmap")
library("purrr")
library("tidyr")
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(location = ifelse(screen_name == "RLadiesMTL", "Montreal", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
# #Google Maps API Terms of Service: http://developers.google.com/maps/terms.
# #Please cite ggmap if you use it: see citation('ggmap') for details.
# save.image("RLadies_growing.Rdata")
# load("RLadies_growing.Rdata")
library("maps")
library("ggthemes")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = as.Date(created_at,
format = "%B %Y"),
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 10))
save.image("RLadies_growing.Rdata")
library(gganimate)
animation::ani.options(ani.width = 1000, ani.height = 800)
gganimate(mp, interval = .2)
animation::ani.options(ani.width = 1000, ani.height = 700)
gganimate(mp, interval = .2)
animation::ani.options(ani.width = 1000, ani.height = 600)
gganimate(mp, interval = .2)
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = as.Date(created_at,
format = "%B %Y"),
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 15))
animation::ani.options(ani.width = 1000, ani.height = 600)
gganimate(mp, interval = .2)
gganimate(mp, interval = .2, "output.gif")
load("RLadies_growing.Rdata")
View(users_2)
library("plotly")
ggplotly(mp, tooltip = c("text", "size", "frame"))
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = created_at,
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 15))
ggplotly(mp, tooltip = c("text", "size", "frame"))
detach(package:plotly)
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = created_at,
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 15))
library("maps", lib.loc="~/rladies_growing/packrat/lib/x86_64-apple-darwin13.4.0/3.3.1")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = created_at,
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 15))
library("ggthemes", lib.loc="~/rladies_growing/packrat/lib/x86_64-apple-darwin13.4.0/3.3.1")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = created_at,
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 15))
ggplotly(mp, tooltip = c("text", "size", "frame"))
library("plotly", lib.loc="~/rladies_growing/packrat/lib/x86_64-apple-darwin13.4.0/3.3.1")
ggplotly(mp, tooltip = c("text", "size", "frame"))
library("dplyr")
library("lubridate")
library("stringr")
library("ggmap")
library("purrr")
library("tidyr")
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(location = ifelse(screen_name == "RLadiesMTL", "Montreal", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
mutate(created = as.Date(created_at, format = "%B %Y")) %>%
select(screen_name, location, created_at, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
View(users_2)
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(location = ifelse(screen_name == "RLadiesMTL", "Montreal", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
mutate(created = as.Date(created_at, format = "%B %Y")) %>%
select(screen_name, location, created, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
View(users_2)
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(location = ifelse(screen_name == "RLadiesMTL", "Montreal", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
mutate(created = format(created_at, format = "%B %Y"))
View(users_2)
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(location = ifelse(screen_name == "RLadiesMTL", "Montreal", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
mutate(created = format(created_at, format = "%m %Y"))
View(users_2)
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(location = ifelse(screen_name == "RLadiesMTL", "Montreal", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
mutate(created = format(created_at, format = "%Y-%m"))
View(users_2)
users_2 <- unique(users) %>%
filter(str_detect(screen_name, "^(RLadies).*")) %>%
filter(!screen_name %in% c("RLadies", "RLadies_LF", "RLadiesGlobal")) %>%
#   mutate(city = str_match(location, "^([^,]+)")[,2]) %>%
mutate(location = ifelse(screen_name == "RLadiesLx", "Lisbon", location)) %>%
mutate(location = ifelse(screen_name == "RLadiesMTL", "Montreal", location)) %>%
mutate(age_days = difftime(as.Date('2017-4-20'), created_at, unit = "days")) %>%
mutate(created = format(created_at, format = "%Y-%m")) %>%
select(screen_name, location, created, followers = followers_count, age_days) %>%
mutate(longlat = purrr::map(.$location, geocode)) %>%
unnest()
View(users_2)
library("maps")
library("ggthemes")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = created),
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 15))
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = created,
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 15))
save.image("RLadies_growing.Rdata")
library(gganimate)
animation::ani.options(ani.width = 1000, ani.height = 600)
gganimate(mp, interval = .2)
gganimate(mp, interval = .2, "output.gif")
library("plotly")
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = created,
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 15))
ggplotly(mp, tooltip = c("text", "size", "frame"))
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map() +
geom_point(aes(x = lon, y = lat, text = paste("city: ", location),
size = followers,
frame = created,
cumulative = TRUE),
data = users_2, colour = 'purple', alpha = .5) +
scale_size_continuous(range = c(1, 10))
ggplotly(mp, tooltip = c("text", "size", "frame"))
shiny::runApp('R-Ladies-Twitter')
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
runApp('R-Ladies-Twitter')
runApp('R-Ladies-Twitter')
shiny::runApp('R-Ladies-Twitter')
library(shiny)
library("shiny", lib.loc="~/rladies_growing/packrat/lib/x86_64-apple-darwin13.4.0/3.3.1")
shiny::runApp('R-Ladies-Twitter')
mp <- ggplot(world.cities, package = "maps") +
borders("world", colour = "gray80", fill = "gray80") +
theme_map()
load("/Users/Daniela/rladies_growing/RLadies_growing.Rdata")
shiny::runApp('R-Ladies-Twitter')
as.Date("2016-04-20", format = "%Y-%m")
format(as.Date("2016-04-20", format = "%Y-%m-%d"),"%Y-%m")
shiny::runApp('R-Ladies-Twitter')
load("/Users/Daniela/rladies_growing/RLadies_growing.Rdata")
View(users_2)
shiny::runApp('R-Ladies-Twitter')
